'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends2 = require('babel-runtime/helpers/extends');

var _extends3 = _interopRequireDefault(_extends2);

var _objectWithoutProperties2 = require('babel-runtime/helpers/objectWithoutProperties');

var _objectWithoutProperties3 = _interopRequireDefault(_objectWithoutProperties2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _jssThemeReactor = require('jss-theme-reactor');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _customPropTypes = require('../utils/customPropTypes');

var _customPropTypes2 = _interopRequireDefault(_customPropTypes);

var _arrowDropDown = require('../svg-icons/arrow-drop-down');

var _arrowDropDown2 = _interopRequireDefault(_arrowDropDown);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

//  weak

var styleSheet = (0, _jssThemeReactor.createStyleSheet)('MuiSelectFieldInput', function (theme) {
  return {
    container: {
      position: 'relative',
      width: '100%'
    },
    select: {
      width: '100%',
      paddingRight: theme.spacing.unit * 4,
      position: 'relative',
      zIndex: 2
    },
    selectEnabled: {
      cursor: 'pointer'
    },
    labelHolder: {
      display: 'none'
    },
    icon: {
      color: theme.palette.text.secondary,
      position: 'absolute',
      right: 0,
      top: 4,
      zIndex: 1
    }
  };
});

var SelectFieldInput = function SelectFieldInput(props, context) {
  var classes = context.styleManager.render(styleSheet);
  var label = props.label,
      options = props.options,
      onFocus = props.onFocus,
      onBlur = props.onBlur,
      onSelectFocus = props.onSelectFocus,
      onSelectBlur = props.onSelectBlur,
      classNameProp = props.className,
      rowsMax = props.rowsMax,
      inputProps = (0, _objectWithoutProperties3.default)(props, ['label', 'options', 'onFocus', 'onBlur', 'onSelectFocus', 'onSelectBlur', 'className', 'rowsMax']);

  var selectClassName = (0, _classnames2.default)(!inputProps.disabled && classes.selectEnabled, classes.select, classNameProp);

  return _react2.default.createElement(
    'div',
    { onFocus: onFocus, onBlur: onBlur, className: classes.container },
    _react2.default.createElement(
      'select',
      (0, _extends3.default)({
        className: selectClassName,
        onFocus: onSelectFocus,
        onBlur: onSelectBlur
      }, inputProps),
      _react2.default.createElement(
        'option',
        { className: classes.labelHolder },
        label
      ),
      _react2.default.Children.map(options, function (option, index) {
        return _react2.default.createElement(
          'option',
          { key: index, value: option.props.value },
          option.props.value && option.props.children
        );
      })
    ),
    _react2.default.createElement(_arrowDropDown2.default, { className: classes.icon })
  );
};

SelectFieldInput.propTypes = process.env.NODE_ENV !== "production" ? {
  /**
   * The CSS class name of the select element.
   */
  className: _propTypes2.default.string,
  /**
   * The label text.
   */
  label: _propTypes2.default.node,
  /** @ignore */
  onBlur: _propTypes2.default.func,
  /** @ignore */
  onFocus: _propTypes2.default.func,
  /** @ignore */
  onSelectBlur: _propTypes2.default.func,
  /** @ignore */
  onSelectFocus: _propTypes2.default.func,
  /**
   * Select options.
   */
  options: _propTypes2.default.arrayOf(_propTypes2.default.node),
  /** @ignore */
  rowsMax: _propTypes2.default.oneOfType([_propTypes2.default.string, _propTypes2.default.number])
} : {};

SelectFieldInput.contextTypes = {
  styleManager: _customPropTypes2.default.muiRequired
};

exports.default = SelectFieldInput;